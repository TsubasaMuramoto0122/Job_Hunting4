//=============================================================================
// コントロール処理 [control_blink.cpp]
// Author : 村元翼
//=============================================================================
#include "control_blink.h"
#include "ui.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define INIT_INTERVAL (30)

//=============================================================================
// コンストラクタ
//=============================================================================
CControlBlink::CControlBlink()
{
	m_nInterval = INIT_INTERVAL;		// 点滅間隔
}

//=============================================================================
// デストラクタ
//=============================================================================
CControlBlink::~CControlBlink()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CControlBlink::Init()
{
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CControlBlink::Uninit()
{

}

//=============================================================================
// 更新処理
//=============================================================================
void CControlBlink::Update(CScene *pObject)
{
	// オブジェクト生成
	CUi *pUi = nullptr;

	// オブジェクトをUIクラスにキャスト
	pUi = (CUi*)pObject;

	if (pUi)
	{
		// フレーム加算
		m_nFrame++;

		D3DXCOLOR color;
		color = pUi->GetCol();

		if (m_nFrame == m_nInterval)
		{
			color = D3DXCOLOR(1.0f, 1.0f, 1.0f, 0.0f);	// 透明化
		}

		else if (m_nFrame >= m_nInterval * 2)
		{
			color = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);	// 不透明化
			m_nFrame = 0;								// フレーム数リセット
		}

		pUi->SetCol(color);	// カラーの設定
	}

}

//=============================================================================
// 生成処理
//=============================================================================
CControlBlink *CControlBlink::Create()
{
	// オブジェクト生成
	CControlBlink *pControlBlink = nullptr;
	if (pControlBlink = new CControlBlink)
	{
		pControlBlink->Init();
	}

	return pControlBlink;
}