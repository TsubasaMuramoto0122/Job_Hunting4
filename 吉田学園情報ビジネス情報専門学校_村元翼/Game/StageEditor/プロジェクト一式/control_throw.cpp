//=============================================================================
// コントロール処理 [control_throw.cpp]
// Author : 村元翼
//=============================================================================
#include "control_throw.h"
#include "bomb.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define THROW_POWER (5.0f)			// 投げる力

//=============================================================================
// 静的メンバ変数の初期化
//=============================================================================
const float CControlThrow::m_fGravity = -0.1f;	// 重力

//=============================================================================
// コンストラクタ
//=============================================================================
CControlThrow::CControlThrow()
{
	m_bDoOnce = false;
}

//=============================================================================
// デストラクタ
//=============================================================================
CControlThrow::~CControlThrow()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CControlThrow::Init()
{
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CControlThrow::Uninit()
{

}

//=============================================================================
// 更新処理
//=============================================================================
void CControlThrow::Update(CScene *pObject)
{
	// インスタンス
	CBomb *pBomb = nullptr;
	if (!pBomb)
	{
		// オブジェクトをBillboardクラスにキャスト
		pBomb = (CBomb*)pObject;

		if (pBomb)
		{
			// なげたときの処理
			D3DXVECTOR3 pos = pBomb->GetPos();

			// 位置に移動量を足す
			pos += m_move;

			if (m_bDoOnce)
			{
				m_move.y += m_fGravity;	// 重力を移動量に加算する
			}

			// 最初に通る処理
			else			
			{
				// 投げる力の初期
				m_move.x = pBomb->GetThrowDir().x * THROW_POWER;
				m_move.z = pBomb->GetThrowDir().z * THROW_POWER;
				m_move.y = THROW_POWER;

				m_move.y += m_fGravity / 2;	// 最初だけ重力 / 2
				m_bDoOnce = true;
			}

			pBomb->SetPos(pos);	// 位置設定
		}
	}
}

//=============================================================================
// 生成処理
//=============================================================================
CControlThrow *CControlThrow::Create()
{
	// インスタンスの生成
	CControlThrow *pControlThrow = nullptr;
	if (!pControlThrow)
	{
		pControlThrow = new CControlThrow();
		if (pControlThrow)
		{
			pControlThrow->Init();	// 初期化
		}
	}
	return pControlThrow;
}